import java.util.ArrayList;
import java.util.Scanner;

class Imovel {
    private int codigo;
    private String endereco;
    private double valor;

    public Imovel() {}

    public Imovel(int codigo, String endereco, double valor) {
        this.codigo = codigo;
        this.endereco = endereco;
        this.valor = valor;
    }

    // Getters e setters aqui

    public String imprimir() {
        return "Código: " + codigo + "\nEndereço: " + endereco + "\nValor: R$" + valor;
    }
}

class ImovelNovo extends Imovel {
    private double valorAdicional;

    public ImovelNovo() {}

    public ImovelNovo(int codigo, String endereco, double valor, double valorAdicional) {
        super(codigo, endereco, valor);
        this.valorAdicional = valorAdicional;
    }

    // Getters e setters aqui

    public double calcularValorImovel() {
        return getValor() + valorAdicional;
    }

    @Override
    public String imprimir() {
        return super.imprimir() + "\nValor com adicional: R$" + calcularValorImovel();
    }
}

public class Main {
    public static void main(String[] args) {
        ArrayList<Imovel> imoveis = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        int opcao;
        do {
            System.out.println("Menu:");
            System.out.println("1 - Inserir Imóvel");
            System.out.println("2 - Exibir Imóveis");
            System.out.println("3 - Sair");
            System.out.print("Escolha uma opção: ");
            opcao = scanner.nextInt();

            switch (opcao) {
                case 1:
                    // Inserir Imóvel
                    imoveis.add(inserirImovel());
                    break;
                case 2:
                    // Exibir Imóveis
                    exibirImoveis(imoveis);
                    break;
                case 3:
                    // Sair
                    System.out.println("Encerrando o programa.");
                    break;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        } while (opcao != 3);
    }

    public static Imovel inserirImovel() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Código: ");
        int codigo = scanner.nextInt();
        scanner.nextLine(); // Consumir a quebra de linha
        System.out.print("Endereço: ");
        String endereco = scanner.nextLine();
        System.out.print("Valor: R$");
        double valor = scanner.nextDouble();
        System.out.print("O imóvel é novo? (S/N): ");
        char opcao = scanner.next().charAt(0);

        if (opcao == 'S' || opcao == 's') {
            System.out.print("Valor Adicional: R$");
            double valorAdicional = scanner.nextDouble();
            return new ImovelNovo(codigo, endereco, valor, valorAdicional);
        } else {
            return new Imovel(codigo, endereco, valor);
        }
    }

    public static void exibirImoveis(ArrayList<Imovel> imoveis) {
        for (Imovel imovel : imoveis) {
            System.out.println(imovel.imprimir());
            System.out.println();
        }
    }
}
